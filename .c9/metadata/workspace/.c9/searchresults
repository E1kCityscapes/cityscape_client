{"changed":true,"filter":false,"title":"searchresults","tooltip":"/.c9/searchresults","value":"Searching for \u0001title\u0001 in\u0001project files (excludes .gitignore'd files)\u0001 (Found 328 matches in 35 files)\n\n/client/main.html:\n\t2:   <title>Cityscape Client</title>\n\n/client/lib/semantic-ui/definitions/behaviors/api.js:\n\t927:               title = settings.name + ':',\n\t935:             title += ' ' + totalTime + 'ms';\n\t937:               title += ' \\'' + moduleSelector + '\\'';\n\t940:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/behaviors/form.js:\n\t971:               title = settings.name + ':',\n\t979:             title += ' ' + totalTime + 'ms';\n\t981:               title += ' \\'' + moduleSelector + '\\'';\n\t984:               title += ' ' + '(' + $allModules.length + ')';\n\t987:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/behaviors/state.js:\n\t496:               title = settings.name + ':',\n\t504:             title += ' ' + totalTime + 'ms';\n\t506:               title += ' \\'' + moduleSelector + '\\'';\n\t509:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/behaviors/visibility.js:\n\t1082:               title = settings.name + ':',\n\t1090:             title += ' ' + totalTime + 'ms';\n\t1092:               title += ' \\'' + moduleSelector + '\\'';\n\t1095:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/behaviors/visit.js:\n\t386:               title = settings.name + ':',\n\t394:             title += ' ' + totalTime + 'ms';\n\t396:               title += ' \\'' + moduleSelector + '\\'';\n\t399:               title += ' ' + '(' + $allModules.length + ')';\n\t402:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/elements/step.import.less:\n\t127: /* Title */\n\t128: .ui.steps .step .title {\n\t129:   font-family: @titleFontFamily;\n\t130:   font-size: @titleFontSize;\n\t131:   font-weight: @titleFontWeight;\n\t133: .ui.steps .step > .title {\n\t146: .ui.steps .step .title ~ .description {\n\t334: .ui.steps .step.active .title {\n\t379: .ui.steps .disabled.step .title,\n\n/client/lib/semantic-ui/definitions/globals/site.js:\n\t331:           title = settings.name + ':',\n\t339:         title += ' ' + totalTime + 'ms';\n\t341:           console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/accordion.import.less:\n\t37: /* Title */\n\t38: .ui.accordion .title,\n\t39: .ui.accordion .accordion .title {\n\t44: .ui.accordion .title:not(.ui) {\n\t45:   padding: @titlePadding;\n\t46:   font-family: @titleFont;\n\t47:   font-size: @titleFontSize;\n\t48:   color: @titleColor;\n\t52: .ui.accordion .title ~ .content,\n\t53: .ui.accordion .accordion .title ~ .content {\n\t58: .ui.accordion:not(.styled) .title ~ .content:not(.ui),\n\t59: .ui.accordion:not(.styled) .accordion .title ~ .content:not(.ui) {\n\t63: .ui.accordion:not(.styled) .title ~ .content:not(.ui):last-child {\n\t68: .ui.accordion .title .dropdown.icon,\n\t69: .ui.accordion .accordion .title .dropdown.icon {\n\t88: .ui.accordion.menu .item .title {\n\t90:   padding: @menuTitlePadding;\n\t92: .ui.accordion.menu .item .title > .dropdown.icon {\n\t108: .ui.accordion .active.title .dropdown.icon,\n\t109: .ui.accordion .accordion .active.title .dropdown.icon {\n\t113: .ui.accordion.menu .item .active.title > .dropdown.icon {\n\t135: .ui.styled.accordion .title,\n\t136: .ui.styled.accordion .accordion .title {\n\t137:   margin: @styledTitleMargin;\n\t138:   padding: @styledTitlePadding;\n\t139:   color: @styledTitleColor;\n\t140:   font-weight: @styledTitleFontWeight;\n\t141:   border-top: @styledTitleBorder;\n\t142:   transition: @styledTitleTransition;\n\t144: .ui.styled.accordion > .title:first-child,\n\t145: .ui.styled.accordion .accordion .title:first-child {\n\t163: .ui.styled.accordion .title:hover,\n\t164: .ui.styled.accordion .active.title,\n\t165: .ui.styled.accordion .accordion .title:hover,\n\t166: .ui.styled.accordion .accordion .active.title {\n\t167:   background: @styledTitleHoverBackground;\n\t168:   color: @styledTitleHoverColor;\n\t170: .ui.styled.accordion .accordion .title:hover,\n\t171: .ui.styled.accordion .accordion .active.title {\n\t172:   background: @styledHoverChildTitleBackground;\n\t173:   color: @styledHoverChildTitleColor;\n\t178: .ui.styled.accordion .active.title {\n\t179:   background: @styledActiveTitleBackground;\n\t180:   color: @styledActiveTitleColor;\n\t182: .ui.styled.accordion .accordion .active.title {\n\t183:   background: @styledActiveChildTitleBackground;\n\t184:   color: @styledActiveChildTitleColor;\n\t218: .ui.inverted.accordion .title:not(.ui) {\n\t219:   color: @invertedTitleColor;\n\n/client/lib/semantic-ui/definitions/modules/accordion.js:\n\t62:         $title   = $module.find(selector.title),\n\t98:           $title   = $module.find(selector.title);\n\t133:             $activeTitle = (query !== undefined)\n\t135:                 ? $title.eq(query)\n\t136:                 : $(query).closest(selector.title)\n\t137:               : $(this).closest(selector.title),\n\t138:             $activeContent = $activeTitle.next($content),\n\t144:           module.debug('Toggling visibility of content', $activeTitle);\n\t147:               module.close.call($activeTitle);\n\t154:             module.open.call($activeTitle);\n\t160:             $activeTitle = (query !== undefined)\n\t162:                 ? $title.eq(query)\n\t163:                 : $(query).closest(selector.title)\n\t164:               : $(this).closest(selector.title),\n\t165:             $activeContent = $activeTitle.next($content),\n\t174:           module.debug('Opening accordion content', $activeTitle);\n\t177:             module.closeOthers.call($activeTitle);\n\t179:           $activeTitle\n\t225:             $activeTitle = (query !== undefined)\n\t227:                 ? $title.eq(query)\n\t228:                 : $(query).closest(selector.title)\n\t229:               : $(this).closest(selector.title),\n\t230:             $activeContent = $activeTitle.next($content),\n\t239:             $activeTitle\n\t286:             $activeTitle = (index !== undefined)\n\t287:               ? $title.eq(index)\n\t288:               : $(this).closest(selector.title),\n\t289:             $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\n\t290:             $activeAccordion = $activeTitle.closest(selector.accordion),\n\t291:             activeSelector   = selector.title + '.' + className.active + ':visible',\n\t293:             $openTitles,\n\t294:             $nestedTitles,\n\t298:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n\t299:             $openContents = $openTitles.next($content);\n\t302:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n\t303:             $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\n\t304:             $openTitles   = $openTitles.not($nestedTitles);\n\t305:             $openContents = $openTitles.next($content);\n\t307:           if( ($openTitles.length > 0) ) {\n\t308:             module.debug('Exclusive enabled, closing other content', $openTitles);\n\t309:             $openTitles\n\t457:               title = settings.name + ':',\n\t465:             title += ' ' + totalTime + 'ms';\n\t467:               title += ' \\'' + moduleSelector + '\\'';\n\t470:               console.groupCollapsed(title);\n\t569:   on              : 'click', // event on title that opens accordion\n\t599:     title     : '.title',\n\t600:     trigger   : '.title',\n\n/client/lib/semantic-ui/definitions/modules/checkbox.js:\n\t675:               title = settings.name + ':',\n\t683:             title += ' ' + totalTime + 'ms';\n\t685:               title += ' \\'' + moduleSelector + '\\'';\n\t688:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/dimmer.js:\n\t533:               title = settings.name + ':',\n\t541:             title += ' ' + totalTime + 'ms';\n\t543:               title += ' \\'' + moduleSelector + '\\'';\n\t546:               title += ' ' + '(' + $allModules.length + ')';\n\t549:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/dropdown.js:\n\t3393:               title = settings.name + ':',\n\t3401:             title += ' ' + totalTime + 'ms';\n\t3403:               title += ' \\'' + moduleSelector + '\\'';\n\t3406:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/embed.js:\n\t465:               title = settings.name + ':',\n\t473:             title += ' ' + totalTime + 'ms';\n\t475:               title += ' \\'' + moduleSelector + '\\'';\n\t478:               title += ' ' + '(' + $allModules.length + ')';\n\t481:               console.groupCollapsed(title);\n\t658:           title    : settings.brandedUI\n\n/client/lib/semantic-ui/definitions/modules/modal.js:\n\t737:               title = settings.name + ':',\n\t745:             title += ' ' + totalTime + 'ms';\n\t747:               title += ' \\'' + moduleSelector + '\\'';\n\t750:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/nag.import.less:\n\t59: .ui.nag > .title {\n\t61:   margin: @titleMargin;\n\t62:   color: @titleColor;\n\t141: .ui.inverted.nags .nag .title,\n\t143: .ui.inverted.nag .title {\n\n/client/lib/semantic-ui/definitions/modules/nag.js:\n\t342:               title = settings.name + ':',\n\t350:             title += ' ' + totalTime + 'ms';\n\t352:               title += ' \\'' + moduleSelector + '\\'';\n\t355:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/popup.js:\n\t247:             title     = module.get.title(),\n\t251:           if(html || content || title) {\n\t255:                 title   : title,\n\t403:               title: $module.attr('title')\n\t405:             if (module.cache.title) {\n\t406:               $module.removeAttr('title');\n\t408:             module.verbose('Saving original attributes', module.cache.title);\n\t413:             if(module.cache && module.cache.title) {\n\t414:               $module.attr('title', module.cache.title);\n\t415:               module.verbose('Restoring original attributes', module.cache.title);\n\t489:           title: function() {\n\t490:             $module.removeData(metadata.title);\n\t491:             return $module.data(metadata.title) || settings.title;\n\t495:             return $module.data(metadata.content) || $module.attr('title') || settings.content;\n\t1176:               title = settings.name + ':',\n\t1184:             title += ' ' + totalTime + 'ms';\n\t1186:               title += ' \\'' + moduleSelector + '\\'';\n\t1189:               console.groupCollapsed(title);\n\t1353:   // explicitly set title\n\t1354:   title          : false,\n\t1416:     title     : 'title',\n\t1463:         if(typeof text.title !== undefined && text.title) {\n\t1464:           text.title = escape(text.title);\n\t1465:           html += '<div class=\"header\">' + text.title + '</div>';\n\n/client/lib/semantic-ui/definitions/modules/progress.js:\n\t746:               title = settings.name + ':',\n\t754:             title += ' ' + totalTime + 'ms';\n\t756:               title += ' \\'' + moduleSelector + '\\'';\n\t759:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/rating.js:\n\t350:               title = settings.name + ':',\n\t358:             title += ' ' + totalTime + 'ms';\n\t360:               title += ' \\'' + moduleSelector + '\\'';\n\t363:               title += ' ' + '(' + $allModules.length + ')';\n\t366:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/search.import.less:\n\t138: .ui.search > .results .result .title {\n\t139:   margin: @resultTitleMargin;\n\t140:   font-family: @resultTitleFont;\n\t141:   font-weight: @resultTitleFontWeight;\n\t142:   font-size: @resultTitleFontSize;\n\t143:   color: @resultTitleColor;\n\t270: .ui.search > .results .result.active .title {\n\t271:   color: @resultActiveTitleColor;\n\n/client/lib/semantic-ui/definitions/modules/search.js:\n\t204:                 $title  = $result.find(selector.title).eq(0),\n\t210:                 title   = $title.html(),\n\t211:                 // title is used for result lookup\n\t212:                 value   = ($title.length > 0)\n\t213:                   ? $title.text()\n\t430:               lookupFields = ['title', 'id'],\n\t1020:               title = settings.name + ':',\n\t1028:             title += ' ' + totalTime + 'ms';\n\t1030:               title += ' \\'' + moduleSelector + '\\'';\n\t1033:               title += ' ' + '(' + $allModules.length + ')';\n\t1036:               console.groupCollapsed(title);\n\t1153:     'title',\n\t1238:     title           : 'title',       // result title\n\t1252:     title        : '.title, .name'\n\t1335:               if(result[fields.title] !== undefined) {\n\t1336:                 html += '<div class=\"title\">' + result[fields.title] + '</div>';\n\t1386:           if(result[fields.title] !== undefined) {\n\t1387:             html += '<div class=\"title\">' + result[fields.title] + '</div>';\n\n/client/lib/semantic-ui/definitions/modules/shape.js:\n\t757:               title = settings.name + ':',\n\t765:             title += ' ' + totalTime + 'ms';\n\t767:               title += ' \\'' + moduleSelector + '\\'';\n\t770:               title += ' ' + '(' + $allModules.length + ')';\n\t773:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/sidebar.js:\n\t853:               title = settings.name + ':',\n\t861:             title += ' ' + totalTime + 'ms';\n\t863:               title += ' \\'' + moduleSelector + '\\'';\n\t866:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/sticky.js:\n\t777:               title = settings.name + ':',\n\t785:             title += ' ' + totalTime + 'ms';\n\t787:               title += ' \\'' + moduleSelector + '\\'';\n\t790:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/definitions/modules/tab.js:\n\t233:                 pageTitle = settings.templates.determineTitle(tabPath) || false\n\t241:               if(pageTitle) {\n\t242:                 $.address.title(pageTitle);\n\t774:               title = settings.name + ':',\n\t782:             title += ' ' + totalTime + 'ms';\n\t784:               title += ' \\'' + moduleSelector + '\\'';\n\t787:               console.groupCollapsed(title);\n\t917:     determineTitle: function(tabArray) {} // returns page title for path\n\n/client/lib/semantic-ui/definitions/modules/transition.js:\n\t920:               title = settings.name + ':',\n\t928:             title += ' ' + totalTime + 'ms';\n\t930:               title += ' \\'' + moduleSelector + '\\'';\n\t933:               title += ' ' + '(' + $allModules.length + ')';\n\t936:               console.groupCollapsed(title);\n\n/client/lib/semantic-ui/site/globals/site.overrides.import.less:\n\t26: .duany-title {\n\n/client/lib/semantic-ui/themes/default/elements/step.variables.import.less:\n\t52: /* Title */\n\t53: @titleFontFamily: @headerFont;\n\t54: @titleFontWeight: bold;\n\t55: @titleFontSize: @relativeLarge;\n\t56: @titleColor: @darkTextColor;\n\n/client/lib/semantic-ui/themes/default/globals/reset.overrides.import.less:\n\t120: abbr[title] {\n\n/client/lib/semantic-ui/themes/default/modules/accordion.overrides.import.less:\n\t19: .ui.accordion .title .dropdown.icon,\n\t20: .ui.accordion .accordion .title .dropdown.icon {\n\t29: .ui.accordion .title .dropdown.icon:before,\n\t30: .ui.accordion .accordion .title .dropdown.icon:before {\n\n/client/lib/semantic-ui/themes/default/modules/accordion.variables.import.less:\n\t11: /* Title */\n\t12: @titleFont: @headerFont;\n\t13: @titlePadding: 0.5em 0em;\n\t14: @titleFontSize: 1em;\n\t15: @titleColor: @textColor;\n\t45: @menuTitlePadding: 0em;\n\t78: /* Styled Title */\n\t79: @styledTitleMargin: 0em;\n\t80: @styledTitlePadding: 0.75em 1em;\n\t81: @styledTitleFontWeight: bold;\n\t82: @styledTitleColor: @unselectedTextColor;\n\t83: @styledTitleTransition: background-color @defaultDuration @defaultEasing;\n\t84: @styledTitleBorder: 1px solid @borderColor;\n\t85: @styledTitleTransition:\n\t90: /* Styled Title States */\n\t91: @styledTitleHoverBackground: transparent;\n\t92: @styledTitleHoverColor: @textColor;\n\t93: @styledActiveTitleBackground: transparent;\n\t94: @styledActiveTitleColor: @selectedTextColor;\n\t96: /* Styled Child Title States */\n\t97: @styledHoverChildTitleBackground: @styledTitleHoverBackground;\n\t98: @styledHoverChildTitleColor: @styledTitleHoverColor;\n\t99: @styledActiveChildTitleBackground: @styledActiveTitleBackground;\n\t100: @styledActiveChildTitleColor: @styledActiveTitleColor;\n\t103: @invertedTitleColor: @invertedTextColor;\n\n/client/lib/semantic-ui/themes/default/modules/nag.variables.import.less:\n\t36: /* Title */\n\t37: @titleColor: @white;\n\t38: @titleMargin: 0em 0.5em;\n\n/client/lib/semantic-ui/themes/default/modules/search.variables.import.less:\n\t54: @resultTitleFont: @headerFont;\n\t55: @resultTitleMargin: -@headerLineHeightOffset 0em 0em;\n\t56: @resultTitleFontWeight: bold;\n\t57: @resultTitleFontSize: @relativeMedium;\n\t58: @resultTitleColor: @darkTextColor;\n\t112: @resultActiveTitleColor: @darkTextColor;\n\n/imports/features/Menu/components/Menu/Menu.jsx:\n\t16:           <h1 className=\"duany-title\">Welcome to the City</h1>\n\nFound 328 matches in 35 files \n\n","undoManager":{"mark":-2,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "],"id":2},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001title\u0001 in\u0001/imports/features/SomeFeature\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":55},"end":{"row":0,"column":84},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001title\u0001 in\u0001/imports/features/SomeFeature\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001title\u0001 in\u0001project files (excludes .gitignore'd files)\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/client/main.html:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t2:   <title>Title Here</title>","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/api.js:",""]},{"start":{"row":6,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["\t927:               title = settings.name + ':',","\t935:             title += ' ' + totalTime + 'ms';","\t937:               title += ' \\'' + moduleSelector + '\\'';","\t940:               console.groupCollapsed(title);","",""]},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/form.js:",""]},{"start":{"row":12,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["\t971:               title = settings.name + ':',","\t979:             title += ' ' + totalTime + 'ms';","\t981:               title += ' \\'' + moduleSelector + '\\'';","\t984:               title += ' ' + '(' + $allModules.length + ')';","\t987:               console.groupCollapsed(title);","",""]},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/state.js:",""]},{"start":{"row":19,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["\t496:               title = settings.name + ':',","\t504:             title += ' ' + totalTime + 'ms';","\t506:               title += ' \\'' + moduleSelector + '\\'';","\t509:               console.groupCollapsed(title);","",""]},{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/visibility.js:",""]},{"start":{"row":25,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["\t1082:               title = settings.name + ':',","\t1090:             title += ' ' + totalTime + 'ms';","\t1092:               title += ' \\'' + moduleSelector + '\\'';","\t1095:               console.groupCollapsed(title);","",""]},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/visit.js:",""]},{"start":{"row":31,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["\t386:               title = settings.name + ':',","\t394:             title += ' ' + totalTime + 'ms';","\t396:               title += ' \\'' + moduleSelector + '\\'';","\t399:               title += ' ' + '(' + $allModules.length + ')';","\t402:               console.groupCollapsed(title);","",""]},{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/elements/step.import.less:",""]},{"start":{"row":38,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["\t127: /* Title */","\t128: .ui.steps .step .title {","\t129:   font-family: @titleFontFamily;","\t130:   font-size: @titleFontSize;","\t131:   font-weight: @titleFontWeight;","\t133: .ui.steps .step > .title {","\t146: .ui.steps .step .title ~ .description {","\t334: .ui.steps .step.active .title {","\t379: .ui.steps .disabled.step .title,","",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/globals/site.js:",""]},{"start":{"row":49,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["\t331:           title = settings.name + ':',","\t339:         title += ' ' + totalTime + 'ms';","\t341:           console.groupCollapsed(title);","",""]},{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/accordion.import.less:",""]},{"start":{"row":54,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["\t37: /* Title */","\t38: .ui.accordion .title,","\t39: .ui.accordion .accordion .title {","\t44: .ui.accordion .title:not(.ui) {","\t45:   padding: @titlePadding;","\t46:   font-family: @titleFont;","\t47:   font-size: @titleFontSize;","\t48:   color: @titleColor;","\t52: .ui.accordion .title ~ .content,","\t53: .ui.accordion .accordion .title ~ .content {","\t58: .ui.accordion:not(.styled) .title ~ .content:not(.ui),","\t59: .ui.accordion:not(.styled) .accordion .title ~ .content:not(.ui) {","\t63: .ui.accordion:not(.styled) .title ~ .content:not(.ui):last-child {","\t68: .ui.accordion .title .dropdown.icon,","\t69: .ui.accordion .accordion .title .dropdown.icon {","\t88: .ui.accordion.menu .item .title {","\t90:   padding: @menuTitlePadding;","\t92: .ui.accordion.menu .item .title > .dropdown.icon {","\t108: .ui.accordion .active.title .dropdown.icon,","\t109: .ui.accordion .accordion .active.title .dropdown.icon {","\t113: .ui.accordion.menu .item .active.title > .dropdown.icon {","\t135: .ui.styled.accordion .title,","\t136: .ui.styled.accordion .accordion .title {","\t137:   margin: @styledTitleMargin;","\t138:   padding: @styledTitlePadding;","\t139:   color: @styledTitleColor;","\t140:   font-weight: @styledTitleFontWeight;","\t141:   border-top: @styledTitleBorder;","\t142:   transition: @styledTitleTransition;","\t144: .ui.styled.accordion > .title:first-child,","\t145: .ui.styled.accordion .accordion .title:first-child {","\t163: .ui.styled.accordion .title:hover,","\t164: .ui.styled.accordion .active.title,","\t165: .ui.styled.accordion .accordion .title:hover,","\t166: .ui.styled.accordion .accordion .active.title {","\t167:   background: @styledTitleHoverBackground;","\t168:   color: @styledTitleHoverColor;","\t170: .ui.styled.accordion .accordion .title:hover,","\t171: .ui.styled.accordion .accordion .active.title {","\t172:   background: @styledHoverChildTitleBackground;","\t173:   color: @styledHoverChildTitleColor;","\t178: .ui.styled.accordion .active.title {","\t179:   background: @styledActiveTitleBackground;","\t180:   color: @styledActiveTitleColor;","\t182: .ui.styled.accordion .accordion .active.title {","\t183:   background: @styledActiveChildTitleBackground;","\t184:   color: @styledActiveChildTitleColor;","\t218: .ui.inverted.accordion .title:not(.ui) {","\t219:   color: @invertedTitleColor;","",""]},{"start":{"row":104,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/accordion.js:",""]},{"start":{"row":105,"column":0},"end":{"row":154,"column":0},"action":"insert","lines":["\t62:         $title   = $module.find(selector.title),","\t98:           $title   = $module.find(selector.title);","\t133:             $activeTitle = (query !== undefined)","\t135:                 ? $title.eq(query)","\t136:                 : $(query).closest(selector.title)","\t137:               : $(this).closest(selector.title),","\t138:             $activeContent = $activeTitle.next($content),","\t144:           module.debug('Toggling visibility of content', $activeTitle);","\t147:               module.close.call($activeTitle);","\t154:             module.open.call($activeTitle);","\t160:             $activeTitle = (query !== undefined)","\t162:                 ? $title.eq(query)","\t163:                 : $(query).closest(selector.title)","\t164:               : $(this).closest(selector.title),","\t165:             $activeContent = $activeTitle.next($content),","\t174:           module.debug('Opening accordion content', $activeTitle);","\t177:             module.closeOthers.call($activeTitle);","\t179:           $activeTitle","\t225:             $activeTitle = (query !== undefined)","\t227:                 ? $title.eq(query)","\t228:                 : $(query).closest(selector.title)","\t229:               : $(this).closest(selector.title),","\t230:             $activeContent = $activeTitle.next($content),","\t239:             $activeTitle","\t286:             $activeTitle = (index !== undefined)","\t287:               ? $title.eq(index)","\t288:               : $(this).closest(selector.title),","\t289:             $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),","\t290:             $activeAccordion = $activeTitle.closest(selector.accordion),","\t291:             activeSelector   = selector.title + '.' + className.active + ':visible',","\t293:             $openTitles,","\t294:             $nestedTitles,","\t298:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t299:             $openContents = $openTitles.next($content);","\t302:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t303:             $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);","\t304:             $openTitles   = $openTitles.not($nestedTitles);","\t305:             $openContents = $openTitles.next($content);","\t307:           if( ($openTitles.length > 0) ) {","\t308:             module.debug('Exclusive enabled, closing other content', $openTitles);","\t309:             $openTitles","\t457:               title = settings.name + ':',","\t465:             title += ' ' + totalTime + 'ms';","\t467:               title += ' \\'' + moduleSelector + '\\'';","\t470:               console.groupCollapsed(title);","\t569:   on              : 'click', // event on title that opens accordion","\t599:     title     : '.title',","\t600:     trigger   : '.title',","",""]},{"start":{"row":154,"column":0},"end":{"row":155,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/checkbox.js:",""]},{"start":{"row":155,"column":0},"end":{"row":160,"column":0},"action":"insert","lines":["\t675:               title = settings.name + ':',","\t683:             title += ' ' + totalTime + 'ms';","\t685:               title += ' \\'' + moduleSelector + '\\'';","\t688:               console.groupCollapsed(title);","",""]},{"start":{"row":160,"column":0},"end":{"row":161,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/dimmer.js:",""]},{"start":{"row":161,"column":0},"end":{"row":167,"column":0},"action":"insert","lines":["\t533:               title = settings.name + ':',","\t541:             title += ' ' + totalTime + 'ms';","\t543:               title += ' \\'' + moduleSelector + '\\'';","\t546:               title += ' ' + '(' + $allModules.length + ')';","\t549:               console.groupCollapsed(title);","",""]},{"start":{"row":167,"column":0},"end":{"row":168,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/dropdown.js:",""]},{"start":{"row":168,"column":0},"end":{"row":173,"column":0},"action":"insert","lines":["\t3393:               title = settings.name + ':',","\t3401:             title += ' ' + totalTime + 'ms';","\t3403:               title += ' \\'' + moduleSelector + '\\'';","\t3406:               console.groupCollapsed(title);","",""]},{"start":{"row":173,"column":0},"end":{"row":174,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/embed.js:",""]},{"start":{"row":174,"column":0},"end":{"row":181,"column":0},"action":"insert","lines":["\t465:               title = settings.name + ':',","\t473:             title += ' ' + totalTime + 'ms';","\t475:               title += ' \\'' + moduleSelector + '\\'';","\t478:               title += ' ' + '(' + $allModules.length + ')';","\t481:               console.groupCollapsed(title);","\t658:           title    : settings.brandedUI","",""]},{"start":{"row":181,"column":0},"end":{"row":182,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/modal.js:",""]},{"start":{"row":182,"column":0},"end":{"row":187,"column":0},"action":"insert","lines":["\t737:               title = settings.name + ':',","\t745:             title += ' ' + totalTime + 'ms';","\t747:               title += ' \\'' + moduleSelector + '\\'';","\t750:               console.groupCollapsed(title);","",""]},{"start":{"row":187,"column":0},"end":{"row":188,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/nag.import.less:",""]},{"start":{"row":188,"column":0},"end":{"row":194,"column":0},"action":"insert","lines":["\t59: .ui.nag > .title {","\t61:   margin: @titleMargin;","\t62:   color: @titleColor;","\t141: .ui.inverted.nags .nag .title,","\t143: .ui.inverted.nag .title {","",""]},{"start":{"row":194,"column":0},"end":{"row":195,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/nag.js:",""]},{"start":{"row":195,"column":0},"end":{"row":200,"column":0},"action":"insert","lines":["\t342:               title = settings.name + ':',","\t350:             title += ' ' + totalTime + 'ms';","\t352:               title += ' \\'' + moduleSelector + '\\'';","\t355:               console.groupCollapsed(title);","",""]},{"start":{"row":200,"column":0},"end":{"row":201,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/popup.js:",""]},{"start":{"row":201,"column":0},"end":{"row":226,"column":0},"action":"insert","lines":["\t247:             title     = module.get.title(),","\t251:           if(html || content || title) {","\t255:                 title   : title,","\t403:               title: $module.attr('title')","\t405:             if (module.cache.title) {","\t406:               $module.removeAttr('title');","\t408:             module.verbose('Saving original attributes', module.cache.title);","\t413:             if(module.cache && module.cache.title) {","\t414:               $module.attr('title', module.cache.title);","\t415:               module.verbose('Restoring original attributes', module.cache.title);","\t489:           title: function() {","\t490:             $module.removeData(metadata.title);","\t491:             return $module.data(metadata.title) || settings.title;","\t495:             return $module.data(metadata.content) || $module.attr('title') || settings.content;","\t1176:               title = settings.name + ':',","\t1184:             title += ' ' + totalTime + 'ms';","\t1186:               title += ' \\'' + moduleSelector + '\\'';","\t1189:               console.groupCollapsed(title);","\t1353:   // explicitly set title","\t1354:   title          : false,","\t1416:     title     : 'title',","\t1463:         if(typeof text.title !== undefined && text.title) {","\t1464:           text.title = escape(text.title);","\t1465:           html += '<div class=\"header\">' + text.title + '</div>';","",""]},{"start":{"row":226,"column":0},"end":{"row":227,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/progress.js:",""]},{"start":{"row":227,"column":0},"end":{"row":232,"column":0},"action":"insert","lines":["\t746:               title = settings.name + ':',","\t754:             title += ' ' + totalTime + 'ms';","\t756:               title += ' \\'' + moduleSelector + '\\'';","\t759:               console.groupCollapsed(title);","",""]},{"start":{"row":232,"column":0},"end":{"row":233,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/rating.js:",""]},{"start":{"row":233,"column":0},"end":{"row":239,"column":0},"action":"insert","lines":["\t350:               title = settings.name + ':',","\t358:             title += ' ' + totalTime + 'ms';","\t360:               title += ' \\'' + moduleSelector + '\\'';","\t363:               title += ' ' + '(' + $allModules.length + ')';","\t366:               console.groupCollapsed(title);","",""]},{"start":{"row":239,"column":0},"end":{"row":240,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/search.import.less:",""]},{"start":{"row":240,"column":0},"end":{"row":249,"column":0},"action":"insert","lines":["\t138: .ui.search > .results .result .title {","\t139:   margin: @resultTitleMargin;","\t140:   font-family: @resultTitleFont;","\t141:   font-weight: @resultTitleFontWeight;","\t142:   font-size: @resultTitleFontSize;","\t143:   color: @resultTitleColor;","\t270: .ui.search > .results .result.active .title {","\t271:   color: @resultActiveTitleColor;","",""]},{"start":{"row":249,"column":0},"end":{"row":250,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/search.js:",""]},{"start":{"row":250,"column":0},"end":{"row":269,"column":0},"action":"insert","lines":["\t204:                 $title  = $result.find(selector.title).eq(0),","\t210:                 title   = $title.html(),","\t211:                 // title is used for result lookup","\t212:                 value   = ($title.length > 0)","\t213:                   ? $title.text()","\t430:               lookupFields = ['title', 'id'],","\t1020:               title = settings.name + ':',","\t1028:             title += ' ' + totalTime + 'ms';","\t1030:               title += ' \\'' + moduleSelector + '\\'';","\t1033:               title += ' ' + '(' + $allModules.length + ')';","\t1036:               console.groupCollapsed(title);","\t1153:     'title',","\t1238:     title           : 'title',       // result title","\t1252:     title        : '.title, .name'","\t1335:               if(result[fields.title] !== undefined) {","\t1336:                 html += '<div class=\"title\">' + result[fields.title] + '</div>';","\t1386:           if(result[fields.title] !== undefined) {","\t1387:             html += '<div class=\"title\">' + result[fields.title] + '</div>';","",""]},{"start":{"row":269,"column":0},"end":{"row":270,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/shape.js:",""]},{"start":{"row":270,"column":0},"end":{"row":276,"column":0},"action":"insert","lines":["\t757:               title = settings.name + ':',","\t765:             title += ' ' + totalTime + 'ms';","\t767:               title += ' \\'' + moduleSelector + '\\'';","\t770:               title += ' ' + '(' + $allModules.length + ')';","\t773:               console.groupCollapsed(title);","",""]},{"start":{"row":276,"column":0},"end":{"row":277,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/sidebar.js:",""]},{"start":{"row":277,"column":0},"end":{"row":282,"column":0},"action":"insert","lines":["\t853:               title = settings.name + ':',","\t861:             title += ' ' + totalTime + 'ms';","\t863:               title += ' \\'' + moduleSelector + '\\'';","\t866:               console.groupCollapsed(title);","",""]},{"start":{"row":282,"column":0},"end":{"row":283,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/sticky.js:",""]},{"start":{"row":283,"column":0},"end":{"row":288,"column":0},"action":"insert","lines":["\t777:               title = settings.name + ':',","\t785:             title += ' ' + totalTime + 'ms';","\t787:               title += ' \\'' + moduleSelector + '\\'';","\t790:               console.groupCollapsed(title);","",""]},{"start":{"row":288,"column":0},"end":{"row":289,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/tab.js:",""]},{"start":{"row":289,"column":0},"end":{"row":298,"column":0},"action":"insert","lines":["\t233:                 pageTitle = settings.templates.determineTitle(tabPath) || false","\t241:               if(pageTitle) {","\t242:                 $.address.title(pageTitle);","\t774:               title = settings.name + ':',","\t782:             title += ' ' + totalTime + 'ms';","\t784:               title += ' \\'' + moduleSelector + '\\'';","\t787:               console.groupCollapsed(title);","\t917:     determineTitle: function(tabArray) {} // returns page title for path","",""]},{"start":{"row":298,"column":0},"end":{"row":299,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/transition.js:",""]},{"start":{"row":299,"column":0},"end":{"row":305,"column":0},"action":"insert","lines":["\t920:               title = settings.name + ':',","\t928:             title += ' ' + totalTime + 'ms';","\t930:               title += ' \\'' + moduleSelector + '\\'';","\t933:               title += ' ' + '(' + $allModules.length + ')';","\t936:               console.groupCollapsed(title);","",""]},{"start":{"row":305,"column":0},"end":{"row":306,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/site/globals/site.overrides.import.less:",""]},{"start":{"row":306,"column":0},"end":{"row":308,"column":0},"action":"insert","lines":["\t26: .duany-title {","",""]},{"start":{"row":308,"column":0},"end":{"row":309,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/elements/step.variables.import.less:",""]},{"start":{"row":309,"column":0},"end":{"row":315,"column":0},"action":"insert","lines":["\t52: /* Title */","\t53: @titleFontFamily: @headerFont;","\t54: @titleFontWeight: bold;","\t55: @titleFontSize: @relativeLarge;","\t56: @titleColor: @darkTextColor;","",""]},{"start":{"row":315,"column":0},"end":{"row":316,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/globals/reset.overrides.import.less:",""]},{"start":{"row":316,"column":0},"end":{"row":318,"column":0},"action":"insert","lines":["\t120: abbr[title] {","",""]},{"start":{"row":318,"column":0},"end":{"row":319,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/accordion.overrides.import.less:",""]},{"start":{"row":319,"column":0},"end":{"row":324,"column":0},"action":"insert","lines":["\t19: .ui.accordion .title .dropdown.icon,","\t20: .ui.accordion .accordion .title .dropdown.icon {","\t29: .ui.accordion .title .dropdown.icon:before,","\t30: .ui.accordion .accordion .title .dropdown.icon:before {","",""]},{"start":{"row":324,"column":0},"end":{"row":325,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/accordion.variables.import.less:",""]},{"start":{"row":325,"column":0},"end":{"row":351,"column":0},"action":"insert","lines":["\t11: /* Title */","\t12: @titleFont: @headerFont;","\t13: @titlePadding: 0.5em 0em;","\t14: @titleFontSize: 1em;","\t15: @titleColor: @textColor;","\t45: @menuTitlePadding: 0em;","\t78: /* Styled Title */","\t79: @styledTitleMargin: 0em;","\t80: @styledTitlePadding: 0.75em 1em;","\t81: @styledTitleFontWeight: bold;","\t82: @styledTitleColor: @unselectedTextColor;","\t83: @styledTitleTransition: background-color @defaultDuration @defaultEasing;","\t84: @styledTitleBorder: 1px solid @borderColor;","\t85: @styledTitleTransition:","\t90: /* Styled Title States */","\t91: @styledTitleHoverBackground: transparent;","\t92: @styledTitleHoverColor: @textColor;","\t93: @styledActiveTitleBackground: transparent;","\t94: @styledActiveTitleColor: @selectedTextColor;","\t96: /* Styled Child Title States */","\t97: @styledHoverChildTitleBackground: @styledTitleHoverBackground;","\t98: @styledHoverChildTitleColor: @styledTitleHoverColor;","\t99: @styledActiveChildTitleBackground: @styledActiveTitleBackground;","\t100: @styledActiveChildTitleColor: @styledActiveTitleColor;","\t103: @invertedTitleColor: @invertedTextColor;","",""]},{"start":{"row":351,"column":0},"end":{"row":352,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/nag.variables.import.less:",""]},{"start":{"row":352,"column":0},"end":{"row":356,"column":0},"action":"insert","lines":["\t36: /* Title */","\t37: @titleColor: @white;","\t38: @titleMargin: 0em 0.5em;","",""]},{"start":{"row":356,"column":0},"end":{"row":357,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/search.variables.import.less:",""]},{"start":{"row":357,"column":0},"end":{"row":364,"column":0},"action":"insert","lines":["\t54: @resultTitleFont: @headerFont;","\t55: @resultTitleMargin: -@headerLineHeightOffset 0em 0em;","\t56: @resultTitleFontWeight: bold;","\t57: @resultTitleFontSize: @relativeMedium;","\t58: @resultTitleColor: @darkTextColor;","\t112: @resultActiveTitleColor: @darkTextColor;","",""]},{"start":{"row":364,"column":0},"end":{"row":365,"column":0},"action":"insert","lines":["/imports/features/Menu/components/Menu/Menu.jsx:",""]},{"start":{"row":365,"column":0},"end":{"row":367,"column":0},"action":"insert","lines":["\t16:           <h1 className=\"duany-title\">Welcome to the City</h1>","",""]},{"start":{"row":367,"column":0},"end":{"row":368,"column":0},"action":"insert","lines":["Found 329 matches in 35 files ",""]},{"start":{"row":368,"column":0},"end":{"row":369,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":69},"end":{"row":0,"column":101},"action":"insert","lines":[" (Found 329 matches in 35 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":369,"column":0},"action":"remove","lines":["Searching for \u0001title\u0001 in\u0001project files (excludes .gitignore'd files)\u0001 (Found 329 matches in 35 files)","","/client/main.html:","\t2:   <title>Title Here</title>","","/client/lib/semantic-ui/definitions/behaviors/api.js:","\t927:               title = settings.name + ':',","\t935:             title += ' ' + totalTime + 'ms';","\t937:               title += ' \\'' + moduleSelector + '\\'';","\t940:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/behaviors/form.js:","\t971:               title = settings.name + ':',","\t979:             title += ' ' + totalTime + 'ms';","\t981:               title += ' \\'' + moduleSelector + '\\'';","\t984:               title += ' ' + '(' + $allModules.length + ')';","\t987:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/behaviors/state.js:","\t496:               title = settings.name + ':',","\t504:             title += ' ' + totalTime + 'ms';","\t506:               title += ' \\'' + moduleSelector + '\\'';","\t509:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/behaviors/visibility.js:","\t1082:               title = settings.name + ':',","\t1090:             title += ' ' + totalTime + 'ms';","\t1092:               title += ' \\'' + moduleSelector + '\\'';","\t1095:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/behaviors/visit.js:","\t386:               title = settings.name + ':',","\t394:             title += ' ' + totalTime + 'ms';","\t396:               title += ' \\'' + moduleSelector + '\\'';","\t399:               title += ' ' + '(' + $allModules.length + ')';","\t402:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/elements/step.import.less:","\t127: /* Title */","\t128: .ui.steps .step .title {","\t129:   font-family: @titleFontFamily;","\t130:   font-size: @titleFontSize;","\t131:   font-weight: @titleFontWeight;","\t133: .ui.steps .step > .title {","\t146: .ui.steps .step .title ~ .description {","\t334: .ui.steps .step.active .title {","\t379: .ui.steps .disabled.step .title,","","/client/lib/semantic-ui/definitions/globals/site.js:","\t331:           title = settings.name + ':',","\t339:         title += ' ' + totalTime + 'ms';","\t341:           console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/accordion.import.less:","\t37: /* Title */","\t38: .ui.accordion .title,","\t39: .ui.accordion .accordion .title {","\t44: .ui.accordion .title:not(.ui) {","\t45:   padding: @titlePadding;","\t46:   font-family: @titleFont;","\t47:   font-size: @titleFontSize;","\t48:   color: @titleColor;","\t52: .ui.accordion .title ~ .content,","\t53: .ui.accordion .accordion .title ~ .content {","\t58: .ui.accordion:not(.styled) .title ~ .content:not(.ui),","\t59: .ui.accordion:not(.styled) .accordion .title ~ .content:not(.ui) {","\t63: .ui.accordion:not(.styled) .title ~ .content:not(.ui):last-child {","\t68: .ui.accordion .title .dropdown.icon,","\t69: .ui.accordion .accordion .title .dropdown.icon {","\t88: .ui.accordion.menu .item .title {","\t90:   padding: @menuTitlePadding;","\t92: .ui.accordion.menu .item .title > .dropdown.icon {","\t108: .ui.accordion .active.title .dropdown.icon,","\t109: .ui.accordion .accordion .active.title .dropdown.icon {","\t113: .ui.accordion.menu .item .active.title > .dropdown.icon {","\t135: .ui.styled.accordion .title,","\t136: .ui.styled.accordion .accordion .title {","\t137:   margin: @styledTitleMargin;","\t138:   padding: @styledTitlePadding;","\t139:   color: @styledTitleColor;","\t140:   font-weight: @styledTitleFontWeight;","\t141:   border-top: @styledTitleBorder;","\t142:   transition: @styledTitleTransition;","\t144: .ui.styled.accordion > .title:first-child,","\t145: .ui.styled.accordion .accordion .title:first-child {","\t163: .ui.styled.accordion .title:hover,","\t164: .ui.styled.accordion .active.title,","\t165: .ui.styled.accordion .accordion .title:hover,","\t166: .ui.styled.accordion .accordion .active.title {","\t167:   background: @styledTitleHoverBackground;","\t168:   color: @styledTitleHoverColor;","\t170: .ui.styled.accordion .accordion .title:hover,","\t171: .ui.styled.accordion .accordion .active.title {","\t172:   background: @styledHoverChildTitleBackground;","\t173:   color: @styledHoverChildTitleColor;","\t178: .ui.styled.accordion .active.title {","\t179:   background: @styledActiveTitleBackground;","\t180:   color: @styledActiveTitleColor;","\t182: .ui.styled.accordion .accordion .active.title {","\t183:   background: @styledActiveChildTitleBackground;","\t184:   color: @styledActiveChildTitleColor;","\t218: .ui.inverted.accordion .title:not(.ui) {","\t219:   color: @invertedTitleColor;","","/client/lib/semantic-ui/definitions/modules/accordion.js:","\t62:         $title   = $module.find(selector.title),","\t98:           $title   = $module.find(selector.title);","\t133:             $activeTitle = (query !== undefined)","\t135:                 ? $title.eq(query)","\t136:                 : $(query).closest(selector.title)","\t137:               : $(this).closest(selector.title),","\t138:             $activeContent = $activeTitle.next($content),","\t144:           module.debug('Toggling visibility of content', $activeTitle);","\t147:               module.close.call($activeTitle);","\t154:             module.open.call($activeTitle);","\t160:             $activeTitle = (query !== undefined)","\t162:                 ? $title.eq(query)","\t163:                 : $(query).closest(selector.title)","\t164:               : $(this).closest(selector.title),","\t165:             $activeContent = $activeTitle.next($content),","\t174:           module.debug('Opening accordion content', $activeTitle);","\t177:             module.closeOthers.call($activeTitle);","\t179:           $activeTitle","\t225:             $activeTitle = (query !== undefined)","\t227:                 ? $title.eq(query)","\t228:                 : $(query).closest(selector.title)","\t229:               : $(this).closest(selector.title),","\t230:             $activeContent = $activeTitle.next($content),","\t239:             $activeTitle","\t286:             $activeTitle = (index !== undefined)","\t287:               ? $title.eq(index)","\t288:               : $(this).closest(selector.title),","\t289:             $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),","\t290:             $activeAccordion = $activeTitle.closest(selector.accordion),","\t291:             activeSelector   = selector.title + '.' + className.active + ':visible',","\t293:             $openTitles,","\t294:             $nestedTitles,","\t298:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t299:             $openContents = $openTitles.next($content);","\t302:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t303:             $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);","\t304:             $openTitles   = $openTitles.not($nestedTitles);","\t305:             $openContents = $openTitles.next($content);","\t307:           if( ($openTitles.length > 0) ) {","\t308:             module.debug('Exclusive enabled, closing other content', $openTitles);","\t309:             $openTitles","\t457:               title = settings.name + ':',","\t465:             title += ' ' + totalTime + 'ms';","\t467:               title += ' \\'' + moduleSelector + '\\'';","\t470:               console.groupCollapsed(title);","\t569:   on              : 'click', // event on title that opens accordion","\t599:     title     : '.title',","\t600:     trigger   : '.title',","","/client/lib/semantic-ui/definitions/modules/checkbox.js:","\t675:               title = settings.name + ':',","\t683:             title += ' ' + totalTime + 'ms';","\t685:               title += ' \\'' + moduleSelector + '\\'';","\t688:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/dimmer.js:","\t533:               title = settings.name + ':',","\t541:             title += ' ' + totalTime + 'ms';","\t543:               title += ' \\'' + moduleSelector + '\\'';","\t546:               title += ' ' + '(' + $allModules.length + ')';","\t549:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/dropdown.js:","\t3393:               title = settings.name + ':',","\t3401:             title += ' ' + totalTime + 'ms';","\t3403:               title += ' \\'' + moduleSelector + '\\'';","\t3406:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/embed.js:","\t465:               title = settings.name + ':',","\t473:             title += ' ' + totalTime + 'ms';","\t475:               title += ' \\'' + moduleSelector + '\\'';","\t478:               title += ' ' + '(' + $allModules.length + ')';","\t481:               console.groupCollapsed(title);","\t658:           title    : settings.brandedUI","","/client/lib/semantic-ui/definitions/modules/modal.js:","\t737:               title = settings.name + ':',","\t745:             title += ' ' + totalTime + 'ms';","\t747:               title += ' \\'' + moduleSelector + '\\'';","\t750:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/nag.import.less:","\t59: .ui.nag > .title {","\t61:   margin: @titleMargin;","\t62:   color: @titleColor;","\t141: .ui.inverted.nags .nag .title,","\t143: .ui.inverted.nag .title {","","/client/lib/semantic-ui/definitions/modules/nag.js:","\t342:               title = settings.name + ':',","\t350:             title += ' ' + totalTime + 'ms';","\t352:               title += ' \\'' + moduleSelector + '\\'';","\t355:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/popup.js:","\t247:             title     = module.get.title(),","\t251:           if(html || content || title) {","\t255:                 title   : title,","\t403:               title: $module.attr('title')","\t405:             if (module.cache.title) {","\t406:               $module.removeAttr('title');","\t408:             module.verbose('Saving original attributes', module.cache.title);","\t413:             if(module.cache && module.cache.title) {","\t414:               $module.attr('title', module.cache.title);","\t415:               module.verbose('Restoring original attributes', module.cache.title);","\t489:           title: function() {","\t490:             $module.removeData(metadata.title);","\t491:             return $module.data(metadata.title) || settings.title;","\t495:             return $module.data(metadata.content) || $module.attr('title') || settings.content;","\t1176:               title = settings.name + ':',","\t1184:             title += ' ' + totalTime + 'ms';","\t1186:               title += ' \\'' + moduleSelector + '\\'';","\t1189:               console.groupCollapsed(title);","\t1353:   // explicitly set title","\t1354:   title          : false,","\t1416:     title     : 'title',","\t1463:         if(typeof text.title !== undefined && text.title) {","\t1464:           text.title = escape(text.title);","\t1465:           html += '<div class=\"header\">' + text.title + '</div>';","","/client/lib/semantic-ui/definitions/modules/progress.js:","\t746:               title = settings.name + ':',","\t754:             title += ' ' + totalTime + 'ms';","\t756:               title += ' \\'' + moduleSelector + '\\'';","\t759:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/rating.js:","\t350:               title = settings.name + ':',","\t358:             title += ' ' + totalTime + 'ms';","\t360:               title += ' \\'' + moduleSelector + '\\'';","\t363:               title += ' ' + '(' + $allModules.length + ')';","\t366:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/search.import.less:","\t138: .ui.search > .results .result .title {","\t139:   margin: @resultTitleMargin;","\t140:   font-family: @resultTitleFont;","\t141:   font-weight: @resultTitleFontWeight;","\t142:   font-size: @resultTitleFontSize;","\t143:   color: @resultTitleColor;","\t270: .ui.search > .results .result.active .title {","\t271:   color: @resultActiveTitleColor;","","/client/lib/semantic-ui/definitions/modules/search.js:","\t204:                 $title  = $result.find(selector.title).eq(0),","\t210:                 title   = $title.html(),","\t211:                 // title is used for result lookup","\t212:                 value   = ($title.length > 0)","\t213:                   ? $title.text()","\t430:               lookupFields = ['title', 'id'],","\t1020:               title = settings.name + ':',","\t1028:             title += ' ' + totalTime + 'ms';","\t1030:               title += ' \\'' + moduleSelector + '\\'';","\t1033:               title += ' ' + '(' + $allModules.length + ')';","\t1036:               console.groupCollapsed(title);","\t1153:     'title',","\t1238:     title           : 'title',       // result title","\t1252:     title        : '.title, .name'","\t1335:               if(result[fields.title] !== undefined) {","\t1336:                 html += '<div class=\"title\">' + result[fields.title] + '</div>';","\t1386:           if(result[fields.title] !== undefined) {","\t1387:             html += '<div class=\"title\">' + result[fields.title] + '</div>';","","/client/lib/semantic-ui/definitions/modules/shape.js:","\t757:               title = settings.name + ':',","\t765:             title += ' ' + totalTime + 'ms';","\t767:               title += ' \\'' + moduleSelector + '\\'';","\t770:               title += ' ' + '(' + $allModules.length + ')';","\t773:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/sidebar.js:","\t853:               title = settings.name + ':',","\t861:             title += ' ' + totalTime + 'ms';","\t863:               title += ' \\'' + moduleSelector + '\\'';","\t866:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/sticky.js:","\t777:               title = settings.name + ':',","\t785:             title += ' ' + totalTime + 'ms';","\t787:               title += ' \\'' + moduleSelector + '\\'';","\t790:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/tab.js:","\t233:                 pageTitle = settings.templates.determineTitle(tabPath) || false","\t241:               if(pageTitle) {","\t242:                 $.address.title(pageTitle);","\t774:               title = settings.name + ':',","\t782:             title += ' ' + totalTime + 'ms';","\t784:               title += ' \\'' + moduleSelector + '\\'';","\t787:               console.groupCollapsed(title);","\t917:     determineTitle: function(tabArray) {} // returns page title for path","","/client/lib/semantic-ui/definitions/modules/transition.js:","\t920:               title = settings.name + ':',","\t928:             title += ' ' + totalTime + 'ms';","\t930:               title += ' \\'' + moduleSelector + '\\'';","\t933:               title += ' ' + '(' + $allModules.length + ')';","\t936:               console.groupCollapsed(title);","","/client/lib/semantic-ui/site/globals/site.overrides.import.less:","\t26: .duany-title {","","/client/lib/semantic-ui/themes/default/elements/step.variables.import.less:","\t52: /* Title */","\t53: @titleFontFamily: @headerFont;","\t54: @titleFontWeight: bold;","\t55: @titleFontSize: @relativeLarge;","\t56: @titleColor: @darkTextColor;","","/client/lib/semantic-ui/themes/default/globals/reset.overrides.import.less:","\t120: abbr[title] {","","/client/lib/semantic-ui/themes/default/modules/accordion.overrides.import.less:","\t19: .ui.accordion .title .dropdown.icon,","\t20: .ui.accordion .accordion .title .dropdown.icon {","\t29: .ui.accordion .title .dropdown.icon:before,","\t30: .ui.accordion .accordion .title .dropdown.icon:before {","","/client/lib/semantic-ui/themes/default/modules/accordion.variables.import.less:","\t11: /* Title */","\t12: @titleFont: @headerFont;","\t13: @titlePadding: 0.5em 0em;","\t14: @titleFontSize: 1em;","\t15: @titleColor: @textColor;","\t45: @menuTitlePadding: 0em;","\t78: /* Styled Title */","\t79: @styledTitleMargin: 0em;","\t80: @styledTitlePadding: 0.75em 1em;","\t81: @styledTitleFontWeight: bold;","\t82: @styledTitleColor: @unselectedTextColor;","\t83: @styledTitleTransition: background-color @defaultDuration @defaultEasing;","\t84: @styledTitleBorder: 1px solid @borderColor;","\t85: @styledTitleTransition:","\t90: /* Styled Title States */","\t91: @styledTitleHoverBackground: transparent;","\t92: @styledTitleHoverColor: @textColor;","\t93: @styledActiveTitleBackground: transparent;","\t94: @styledActiveTitleColor: @selectedTextColor;","\t96: /* Styled Child Title States */","\t97: @styledHoverChildTitleBackground: @styledTitleHoverBackground;","\t98: @styledHoverChildTitleColor: @styledTitleHoverColor;","\t99: @styledActiveChildTitleBackground: @styledActiveTitleBackground;","\t100: @styledActiveChildTitleColor: @styledActiveTitleColor;","\t103: @invertedTitleColor: @invertedTextColor;","","/client/lib/semantic-ui/themes/default/modules/nag.variables.import.less:","\t36: /* Title */","\t37: @titleColor: @white;","\t38: @titleMargin: 0em 0.5em;","","/client/lib/semantic-ui/themes/default/modules/search.variables.import.less:","\t54: @resultTitleFont: @headerFont;","\t55: @resultTitleMargin: -@headerLineHeightOffset 0em 0em;","\t56: @resultTitleFontWeight: bold;","\t57: @resultTitleFontSize: @relativeMedium;","\t58: @resultTitleColor: @darkTextColor;","\t112: @resultActiveTitleColor: @darkTextColor;","","/imports/features/Menu/components/Menu/Menu.jsx:","\t16:           <h1 className=\"duany-title\">Welcome to the City</h1>","","Found 329 matches in 35 files ","",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001title\u0001 in\u0001project files (excludes .gitignore'd files)\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/client/main.html:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t2:   <title>Cityscape Client</title>","",""]},{"start":{"row":5,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/api.js:","\t927:               title = settings.name + ':',","\t935:             title += ' ' + totalTime + 'ms';","\t937:               title += ' \\'' + moduleSelector + '\\'';","\t940:               console.groupCollapsed(title);","",""]},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/form.js:",""]},{"start":{"row":12,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["\t971:               title = settings.name + ':',","\t979:             title += ' ' + totalTime + 'ms';","\t981:               title += ' \\'' + moduleSelector + '\\'';","\t984:               title += ' ' + '(' + $allModules.length + ')';","\t987:               console.groupCollapsed(title);","",""]},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/state.js:",""]},{"start":{"row":19,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["\t496:               title = settings.name + ':',","\t504:             title += ' ' + totalTime + 'ms';","\t506:               title += ' \\'' + moduleSelector + '\\'';","\t509:               console.groupCollapsed(title);","",""]},{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/visibility.js:",""]},{"start":{"row":25,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["\t1082:               title = settings.name + ':',","\t1090:             title += ' ' + totalTime + 'ms';","\t1092:               title += ' \\'' + moduleSelector + '\\'';","\t1095:               console.groupCollapsed(title);","",""]},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/behaviors/visit.js:",""]},{"start":{"row":31,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["\t386:               title = settings.name + ':',","\t394:             title += ' ' + totalTime + 'ms';","\t396:               title += ' \\'' + moduleSelector + '\\'';","\t399:               title += ' ' + '(' + $allModules.length + ')';","\t402:               console.groupCollapsed(title);","",""]},{"start":{"row":37,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/elements/step.import.less:","\t127: /* Title */","\t128: .ui.steps .step .title {","\t129:   font-family: @titleFontFamily;","\t130:   font-size: @titleFontSize;","\t131:   font-weight: @titleFontWeight;","\t133: .ui.steps .step > .title {","\t146: .ui.steps .step .title ~ .description {","\t334: .ui.steps .step.active .title {","\t379: .ui.steps .disabled.step .title,","",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/globals/site.js:",""]},{"start":{"row":49,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["\t331:           title = settings.name + ':',","\t339:         title += ' ' + totalTime + 'ms';","\t341:           console.groupCollapsed(title);","",""]},{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/accordion.import.less:",""]},{"start":{"row":54,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["\t37: /* Title */","\t38: .ui.accordion .title,","\t39: .ui.accordion .accordion .title {","\t44: .ui.accordion .title:not(.ui) {","\t45:   padding: @titlePadding;","\t46:   font-family: @titleFont;","\t47:   font-size: @titleFontSize;","\t48:   color: @titleColor;","\t52: .ui.accordion .title ~ .content,","\t53: .ui.accordion .accordion .title ~ .content {","\t58: .ui.accordion:not(.styled) .title ~ .content:not(.ui),","\t59: .ui.accordion:not(.styled) .accordion .title ~ .content:not(.ui) {","\t63: .ui.accordion:not(.styled) .title ~ .content:not(.ui):last-child {","\t68: .ui.accordion .title .dropdown.icon,","\t69: .ui.accordion .accordion .title .dropdown.icon {","\t88: .ui.accordion.menu .item .title {","\t90:   padding: @menuTitlePadding;","\t92: .ui.accordion.menu .item .title > .dropdown.icon {","\t108: .ui.accordion .active.title .dropdown.icon,","\t109: .ui.accordion .accordion .active.title .dropdown.icon {","\t113: .ui.accordion.menu .item .active.title > .dropdown.icon {","\t135: .ui.styled.accordion .title,","\t136: .ui.styled.accordion .accordion .title {","\t137:   margin: @styledTitleMargin;","\t138:   padding: @styledTitlePadding;","\t139:   color: @styledTitleColor;","\t140:   font-weight: @styledTitleFontWeight;","\t141:   border-top: @styledTitleBorder;","\t142:   transition: @styledTitleTransition;","\t144: .ui.styled.accordion > .title:first-child,","\t145: .ui.styled.accordion .accordion .title:first-child {","\t163: .ui.styled.accordion .title:hover,","\t164: .ui.styled.accordion .active.title,","\t165: .ui.styled.accordion .accordion .title:hover,","\t166: .ui.styled.accordion .accordion .active.title {","\t167:   background: @styledTitleHoverBackground;","\t168:   color: @styledTitleHoverColor;","\t170: .ui.styled.accordion .accordion .title:hover,","\t171: .ui.styled.accordion .accordion .active.title {","\t172:   background: @styledHoverChildTitleBackground;","\t173:   color: @styledHoverChildTitleColor;","\t178: .ui.styled.accordion .active.title {","\t179:   background: @styledActiveTitleBackground;","\t180:   color: @styledActiveTitleColor;","\t182: .ui.styled.accordion .accordion .active.title {","\t183:   background: @styledActiveChildTitleBackground;","\t184:   color: @styledActiveChildTitleColor;","\t218: .ui.inverted.accordion .title:not(.ui) {","\t219:   color: @invertedTitleColor;","",""]},{"start":{"row":104,"column":0},"end":{"row":154,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/accordion.js:","\t62:         $title   = $module.find(selector.title),","\t98:           $title   = $module.find(selector.title);","\t133:             $activeTitle = (query !== undefined)","\t135:                 ? $title.eq(query)","\t136:                 : $(query).closest(selector.title)","\t137:               : $(this).closest(selector.title),","\t138:             $activeContent = $activeTitle.next($content),","\t144:           module.debug('Toggling visibility of content', $activeTitle);","\t147:               module.close.call($activeTitle);","\t154:             module.open.call($activeTitle);","\t160:             $activeTitle = (query !== undefined)","\t162:                 ? $title.eq(query)","\t163:                 : $(query).closest(selector.title)","\t164:               : $(this).closest(selector.title),","\t165:             $activeContent = $activeTitle.next($content),","\t174:           module.debug('Opening accordion content', $activeTitle);","\t177:             module.closeOthers.call($activeTitle);","\t179:           $activeTitle","\t225:             $activeTitle = (query !== undefined)","\t227:                 ? $title.eq(query)","\t228:                 : $(query).closest(selector.title)","\t229:               : $(this).closest(selector.title),","\t230:             $activeContent = $activeTitle.next($content),","\t239:             $activeTitle","\t286:             $activeTitle = (index !== undefined)","\t287:               ? $title.eq(index)","\t288:               : $(this).closest(selector.title),","\t289:             $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),","\t290:             $activeAccordion = $activeTitle.closest(selector.accordion),","\t291:             activeSelector   = selector.title + '.' + className.active + ':visible',","\t293:             $openTitles,","\t294:             $nestedTitles,","\t298:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t299:             $openContents = $openTitles.next($content);","\t302:             $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);","\t303:             $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);","\t304:             $openTitles   = $openTitles.not($nestedTitles);","\t305:             $openContents = $openTitles.next($content);","\t307:           if( ($openTitles.length > 0) ) {","\t308:             module.debug('Exclusive enabled, closing other content', $openTitles);","\t309:             $openTitles","\t457:               title = settings.name + ':',","\t465:             title += ' ' + totalTime + 'ms';","\t467:               title += ' \\'' + moduleSelector + '\\'';","\t470:               console.groupCollapsed(title);","\t569:   on              : 'click', // event on title that opens accordion","\t599:     title     : '.title',","\t600:     trigger   : '.title',","",""]},{"start":{"row":154,"column":0},"end":{"row":160,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/checkbox.js:","\t675:               title = settings.name + ':',","\t683:             title += ' ' + totalTime + 'ms';","\t685:               title += ' \\'' + moduleSelector + '\\'';","\t688:               console.groupCollapsed(title);","",""]},{"start":{"row":160,"column":0},"end":{"row":161,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/dimmer.js:",""]},{"start":{"row":161,"column":0},"end":{"row":167,"column":0},"action":"insert","lines":["\t533:               title = settings.name + ':',","\t541:             title += ' ' + totalTime + 'ms';","\t543:               title += ' \\'' + moduleSelector + '\\'';","\t546:               title += ' ' + '(' + $allModules.length + ')';","\t549:               console.groupCollapsed(title);","",""]},{"start":{"row":167,"column":0},"end":{"row":173,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/dropdown.js:","\t3393:               title = settings.name + ':',","\t3401:             title += ' ' + totalTime + 'ms';","\t3403:               title += ' \\'' + moduleSelector + '\\'';","\t3406:               console.groupCollapsed(title);","",""]},{"start":{"row":173,"column":0},"end":{"row":181,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/embed.js:","\t465:               title = settings.name + ':',","\t473:             title += ' ' + totalTime + 'ms';","\t475:               title += ' \\'' + moduleSelector + '\\'';","\t478:               title += ' ' + '(' + $allModules.length + ')';","\t481:               console.groupCollapsed(title);","\t658:           title    : settings.brandedUI","",""]},{"start":{"row":181,"column":0},"end":{"row":182,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/modal.js:",""]},{"start":{"row":182,"column":0},"end":{"row":188,"column":0},"action":"insert","lines":["\t737:               title = settings.name + ':',","\t745:             title += ' ' + totalTime + 'ms';","\t747:               title += ' \\'' + moduleSelector + '\\'';","\t750:               console.groupCollapsed(title);","","/client/lib/semantic-ui/definitions/modules/nag.import.less:",""]},{"start":{"row":188,"column":0},"end":{"row":194,"column":0},"action":"insert","lines":["\t59: .ui.nag > .title {","\t61:   margin: @titleMargin;","\t62:   color: @titleColor;","\t141: .ui.inverted.nags .nag .title,","\t143: .ui.inverted.nag .title {","",""]},{"start":{"row":194,"column":0},"end":{"row":195,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/nag.js:",""]},{"start":{"row":195,"column":0},"end":{"row":200,"column":0},"action":"insert","lines":["\t342:               title = settings.name + ':',","\t350:             title += ' ' + totalTime + 'ms';","\t352:               title += ' \\'' + moduleSelector + '\\'';","\t355:               console.groupCollapsed(title);","",""]},{"start":{"row":200,"column":0},"end":{"row":201,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/popup.js:",""]},{"start":{"row":201,"column":0},"end":{"row":226,"column":0},"action":"insert","lines":["\t247:             title     = module.get.title(),","\t251:           if(html || content || title) {","\t255:                 title   : title,","\t403:               title: $module.attr('title')","\t405:             if (module.cache.title) {","\t406:               $module.removeAttr('title');","\t408:             module.verbose('Saving original attributes', module.cache.title);","\t413:             if(module.cache && module.cache.title) {","\t414:               $module.attr('title', module.cache.title);","\t415:               module.verbose('Restoring original attributes', module.cache.title);","\t489:           title: function() {","\t490:             $module.removeData(metadata.title);","\t491:             return $module.data(metadata.title) || settings.title;","\t495:             return $module.data(metadata.content) || $module.attr('title') || settings.content;","\t1176:               title = settings.name + ':',","\t1184:             title += ' ' + totalTime + 'ms';","\t1186:               title += ' \\'' + moduleSelector + '\\'';","\t1189:               console.groupCollapsed(title);","\t1353:   // explicitly set title","\t1354:   title          : false,","\t1416:     title     : 'title',","\t1463:         if(typeof text.title !== undefined && text.title) {","\t1464:           text.title = escape(text.title);","\t1465:           html += '<div class=\"header\">' + text.title + '</div>';","",""]},{"start":{"row":226,"column":0},"end":{"row":227,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/progress.js:",""]},{"start":{"row":227,"column":0},"end":{"row":232,"column":0},"action":"insert","lines":["\t746:               title = settings.name + ':',","\t754:             title += ' ' + totalTime + 'ms';","\t756:               title += ' \\'' + moduleSelector + '\\'';","\t759:               console.groupCollapsed(title);","",""]},{"start":{"row":232,"column":0},"end":{"row":239,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/rating.js:","\t350:               title = settings.name + ':',","\t358:             title += ' ' + totalTime + 'ms';","\t360:               title += ' \\'' + moduleSelector + '\\'';","\t363:               title += ' ' + '(' + $allModules.length + ')';","\t366:               console.groupCollapsed(title);","",""]},{"start":{"row":239,"column":0},"end":{"row":240,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/search.import.less:",""]},{"start":{"row":240,"column":0},"end":{"row":249,"column":0},"action":"insert","lines":["\t138: .ui.search > .results .result .title {","\t139:   margin: @resultTitleMargin;","\t140:   font-family: @resultTitleFont;","\t141:   font-weight: @resultTitleFontWeight;","\t142:   font-size: @resultTitleFontSize;","\t143:   color: @resultTitleColor;","\t270: .ui.search > .results .result.active .title {","\t271:   color: @resultActiveTitleColor;","",""]},{"start":{"row":249,"column":0},"end":{"row":269,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/search.js:","\t204:                 $title  = $result.find(selector.title).eq(0),","\t210:                 title   = $title.html(),","\t211:                 // title is used for result lookup","\t212:                 value   = ($title.length > 0)","\t213:                   ? $title.text()","\t430:               lookupFields = ['title', 'id'],","\t1020:               title = settings.name + ':',","\t1028:             title += ' ' + totalTime + 'ms';","\t1030:               title += ' \\'' + moduleSelector + '\\'';","\t1033:               title += ' ' + '(' + $allModules.length + ')';","\t1036:               console.groupCollapsed(title);","\t1153:     'title',","\t1238:     title           : 'title',       // result title","\t1252:     title        : '.title, .name'","\t1335:               if(result[fields.title] !== undefined) {","\t1336:                 html += '<div class=\"title\">' + result[fields.title] + '</div>';","\t1386:           if(result[fields.title] !== undefined) {","\t1387:             html += '<div class=\"title\">' + result[fields.title] + '</div>';","",""]},{"start":{"row":269,"column":0},"end":{"row":276,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/shape.js:","\t757:               title = settings.name + ':',","\t765:             title += ' ' + totalTime + 'ms';","\t767:               title += ' \\'' + moduleSelector + '\\'';","\t770:               title += ' ' + '(' + $allModules.length + ')';","\t773:               console.groupCollapsed(title);","",""]},{"start":{"row":276,"column":0},"end":{"row":282,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/sidebar.js:","\t853:               title = settings.name + ':',","\t861:             title += ' ' + totalTime + 'ms';","\t863:               title += ' \\'' + moduleSelector + '\\'';","\t866:               console.groupCollapsed(title);","",""]},{"start":{"row":282,"column":0},"end":{"row":288,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/sticky.js:","\t777:               title = settings.name + ':',","\t785:             title += ' ' + totalTime + 'ms';","\t787:               title += ' \\'' + moduleSelector + '\\'';","\t790:               console.groupCollapsed(title);","",""]},{"start":{"row":288,"column":0},"end":{"row":289,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/tab.js:",""]},{"start":{"row":289,"column":0},"end":{"row":298,"column":0},"action":"insert","lines":["\t233:                 pageTitle = settings.templates.determineTitle(tabPath) || false","\t241:               if(pageTitle) {","\t242:                 $.address.title(pageTitle);","\t774:               title = settings.name + ':',","\t782:             title += ' ' + totalTime + 'ms';","\t784:               title += ' \\'' + moduleSelector + '\\'';","\t787:               console.groupCollapsed(title);","\t917:     determineTitle: function(tabArray) {} // returns page title for path","",""]},{"start":{"row":298,"column":0},"end":{"row":305,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/definitions/modules/transition.js:","\t920:               title = settings.name + ':',","\t928:             title += ' ' + totalTime + 'ms';","\t930:               title += ' \\'' + moduleSelector + '\\'';","\t933:               title += ' ' + '(' + $allModules.length + ')';","\t936:               console.groupCollapsed(title);","",""]},{"start":{"row":305,"column":0},"end":{"row":308,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/site/globals/site.overrides.import.less:","\t26: .duany-title {","",""]},{"start":{"row":308,"column":0},"end":{"row":315,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/elements/step.variables.import.less:","\t52: /* Title */","\t53: @titleFontFamily: @headerFont;","\t54: @titleFontWeight: bold;","\t55: @titleFontSize: @relativeLarge;","\t56: @titleColor: @darkTextColor;","",""]},{"start":{"row":315,"column":0},"end":{"row":318,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/globals/reset.overrides.import.less:","\t120: abbr[title] {","",""]},{"start":{"row":318,"column":0},"end":{"row":324,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/accordion.overrides.import.less:","\t19: .ui.accordion .title .dropdown.icon,","\t20: .ui.accordion .accordion .title .dropdown.icon {","\t29: .ui.accordion .title .dropdown.icon:before,","\t30: .ui.accordion .accordion .title .dropdown.icon:before {","",""]},{"start":{"row":324,"column":0},"end":{"row":325,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/accordion.variables.import.less:",""]},{"start":{"row":325,"column":0},"end":{"row":351,"column":0},"action":"insert","lines":["\t11: /* Title */","\t12: @titleFont: @headerFont;","\t13: @titlePadding: 0.5em 0em;","\t14: @titleFontSize: 1em;","\t15: @titleColor: @textColor;","\t45: @menuTitlePadding: 0em;","\t78: /* Styled Title */","\t79: @styledTitleMargin: 0em;","\t80: @styledTitlePadding: 0.75em 1em;","\t81: @styledTitleFontWeight: bold;","\t82: @styledTitleColor: @unselectedTextColor;","\t83: @styledTitleTransition: background-color @defaultDuration @defaultEasing;","\t84: @styledTitleBorder: 1px solid @borderColor;","\t85: @styledTitleTransition:","\t90: /* Styled Title States */","\t91: @styledTitleHoverBackground: transparent;","\t92: @styledTitleHoverColor: @textColor;","\t93: @styledActiveTitleBackground: transparent;","\t94: @styledActiveTitleColor: @selectedTextColor;","\t96: /* Styled Child Title States */","\t97: @styledHoverChildTitleBackground: @styledTitleHoverBackground;","\t98: @styledHoverChildTitleColor: @styledTitleHoverColor;","\t99: @styledActiveChildTitleBackground: @styledActiveTitleBackground;","\t100: @styledActiveChildTitleColor: @styledActiveTitleColor;","\t103: @invertedTitleColor: @invertedTextColor;","",""]},{"start":{"row":351,"column":0},"end":{"row":352,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/nag.variables.import.less:",""]},{"start":{"row":352,"column":0},"end":{"row":356,"column":0},"action":"insert","lines":["\t36: /* Title */","\t37: @titleColor: @white;","\t38: @titleMargin: 0em 0.5em;","",""]},{"start":{"row":356,"column":0},"end":{"row":357,"column":0},"action":"insert","lines":["/client/lib/semantic-ui/themes/default/modules/search.variables.import.less:",""]},{"start":{"row":357,"column":0},"end":{"row":364,"column":0},"action":"insert","lines":["\t54: @resultTitleFont: @headerFont;","\t55: @resultTitleMargin: -@headerLineHeightOffset 0em 0em;","\t56: @resultTitleFontWeight: bold;","\t57: @resultTitleFontSize: @relativeMedium;","\t58: @resultTitleColor: @darkTextColor;","\t112: @resultActiveTitleColor: @darkTextColor;","",""]},{"start":{"row":364,"column":0},"end":{"row":367,"column":0},"action":"insert","lines":["/imports/features/Menu/components/Menu/Menu.jsx:","\t16:           <h1 className=\"duany-title\">Welcome to the City</h1>","",""]},{"start":{"row":367,"column":0},"end":{"row":368,"column":0},"action":"insert","lines":["Found 328 matches in 35 files ",""]},{"start":{"row":368,"column":0},"end":{"row":369,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":69},"end":{"row":0,"column":101},"action":"insert","lines":[" (Found 328 matches in 35 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":13},"end":{"row":3,"column":22},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1495179419666}